<xlue>


	
	<control class="Thunder.SliderBarButton">
		<attr_def>
			<attr name="NormalBkgID" type="string"><default>texture.sliderbarbutton.normal</default></attr>
			<attr name="DownBkgID" type="string"><default>texture.sliderbarbutton.down</default></attr>
			<attr name="DisableBkgID" type="string"><default>texture.sliderbarbutton.disable</default></attr>
			<attr name="HoverBkgID" type="string"><default>texture.sliderbarbutton.hover</default></attr>

			<attr name="TextColor" type="string" ><default>system.black</default></attr>
			<attr name="TextFont" type="string" ><default>sliderbar.button.font</default></attr>
			<attr name="DisableTextColor" type="string" ><default>system.gray</default></attr>
			<attr name="ValidLeft" type="int"/>
			<attr name="ValidTop" type="int"/>
			<attr name="ValidWidth" type="int"/>
			<attr name="ValidHeight" type="int"/>
			<attr name="UseValidPos" type="bool">
				<default>false</default>
			</attr>
			<attr name="ChangeStateWhenLeave" type="bool">
				<default>true</default>
			</attr>

			<attr name="SpaceMagrin" type="int"><!--按钮两边空白-->
				<default>0</default>
			</attr>
			
			<attr name="NowState" type="int" />
			<attr name="Text" type="string" />
			<!--是否默认按钮-->
			<attr name="IsDefaultButton" type="bool">
				<default>false</default>
			</attr>
			<!--有焦点时是否显示虚线框-->
			<attr name="ShowFocusRect" type="bool" >
				<default>true</default>
			</attr>
			<!-- 焦点虚线框的位置 -->
			<attr name="FocusRectLeft" type="int" >
				<default>0</default>
			</attr>
			<attr name="FocusRectTop" type="int" >
				<default>0</default>
			</attr>
			<attr name="FocusRectWidth" type="int" >
				<default>0</default>
			</attr>
			<attr name="FocusRectHeight" type="int" >
				<default>0</default>
			</attr>
            <attr name="IsDownModifyPos" type="bool">
                <default>true</default>
            </attr>
		</attr_def>
		<method_def>
			<SetState file="SliderBarButton.xml.lua" func="SetState" />
			<SetText file="SliderBarButton.xml.lua" func="SetText" />
			<GetText file="SliderBarButton.xml.lua" func="GetText" />
			<SetTextColor file="SliderBarButton.xml.lua" func="SetTextColor" />
			<SetTextFont file="SliderBarButton.xml.lua" func="SetTextFont" />
			<SetTextPos file="SliderBarButton.xml.lua" func="SetTextPos" />
			<SetBitmap file="SliderBarButton.xml.lua" func="SetBitmap" />
			<SetSpaceMagrin file="SliderBarButton.xml.lua" func="SetSpaceMagrin" />
			<GetTextWidth file="SliderBarButton.xml.lua" func="GetTextWidth" />
			<SetDefaultButton file="SliderBarButton.xml.lua" func="SetDefaultButton" />
		</method_def>
		<event_def>
			<OnClick />
			<OnButtonMouseMove>
				<param>
					<int />
					<int />
				</param>
			</OnButtonMouseMove>
			<OnButtonMouseLeave>
				<param>
					<int />
					<int />
				</param>
			</OnButtonMouseLeave>
			<OnButtonMouseDown />
		</event_def>
		<objtemplate>
			<children>
				<obj id="button.bkg" class="TextureObject">
					<attr>
						<left>0</left>
						<top>0</top>
						<width>father.width</width>
						<height>father.height</height>
					</attr>
					<children>
 						<obj id="focusrectangle" class="RectangleObject">
							<attr>
								<left>2</left>
								<top>2</top>
								<width>father.width-6</width>
								<height>father.height-6</height>
								<srcpt>0,0</srcpt>
								<destpt>width,height</destpt>
								<pen>pen.dot</pen>
								<pencolor>system.black</pencolor>
								<brush>brush.null</brush>
								<visible>false</visible>
							</attr>
						</obj>
						<obj id="button.oldbkg" class="TextureObject">
							<attr>
								<left>0</left>
								<top>0</top>
								<width>father.width</width>
								<height>father.height</height>
								<alpha>0</alpha>
							</attr>
							<children>
								<obj id="button.text" class="TextObject">
									<attr>
										<left>0</left>
										<top>0</top>
										<width>father.width</width>
										<height>father.height</height>
										<font>button.default.font</font>
										<halign>center</halign>
										<valign>center</valign>
										<zorder>50</zorder>
									</attr>
								</obj>
							</children>
						</obj>
					</children>
				</obj>
			</children>
			<eventlist>
				<event name="OnLButtonDown" file="SliderBarButton.xml.lua" func="OnLButtonDown" />
				<event name="OnLButtonUp" file="SliderBarButton.xml.lua" func="OnLButtonUp" />
				<event name="OnMouseMove" file="SliderBarButton.xml.lua" func="OnMouseMove" />
				<event name="OnMouseLeave" file="SliderBarButton.xml.lua" func="OnMouseLeave" />
				<event name="OnFocusChange" file="SliderBarButton.xml.lua" func="OnFocusChange" />
				<event name="OnInitControl" file="SliderBarButton.xml.lua" func="OnInitControl" />
				<event name="OnKeyUp" file="SliderBarButton.xml.lua" func="OnKeyUp" />
				<event name="OnKeyDown" file="SliderBarButton.xml.lua" func="OnKeyDown" />
				<event name="OnEnableChange" file="SliderBarButton.xml.lua" func="OnEnableChange" />
				<event name="OnVisibleChange" file="SliderBarButton.xml.lua" func="OnVisibleChange" />
			</eventlist>
		</objtemplate>
	</control>

</xlue>
